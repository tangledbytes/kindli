images:
- location: "https://cloud.debian.org/images/cloud/bullseye/20220816-1109/debian-11-generic-amd64-20220816-1109.qcow2"
  arch: "x86_64"
  digest: "sha512:934e1a177ad92ce5171b6d4d90796541ccad1bbdaf26a310065bbb00374e82d8d8b44e95f574dbd54e90c9edbeb735d4b5922aba6107fc821718dedbc0183961"
- location: "https://cloud.debian.org/images/cloud/bullseye/20220816-1109/debian-11-generic-arm64-20220816-1109.qcow2"
  arch: "aarch64"
  digest: "sha512:4ba22e50d2603e113a045583f2e7d31cf4db1a1c246a1a62703b4f16892e479d9bf8eb8e82499c1e78455735e4ef6cdf0dc20513c279115c1e80f8a9c3f516b2"

cpus: {{or .CPU 4}}
memory: "{{or .Memory "16GiB"}}"
disk: "{{or .Disk "100GiB"}}"
arch: {{or .Arch "default"}}

mounts:
  - location: "/tmp/lima"
    writable: true
{{- range $index, $element := .Mounts}}
  - location: "{{$element.location}}"
    writable: {{$element.writable}}
    9p: {}
{{- end}}

containerd:
  system: false
  user: true

provision:
  - mode: system
    script: |
      #!/bin/bash
      set -eux -o pipefail

      function enable_fips() {
        dracut -f

        local arg=GRUB_CMDLINE_LINUX_DEFAULT
        local grubl=/etc/default/grub
        local CUR=$(cat $grubl | grep "$arg" | sed "s/$arg=//g" | tr -d '"')
        sed -i "s/^$arg=.*/$arg=$(echo \"$CUR fips=1\")/g" "$grubl"

        update-grub
      }

      export DEBIAN_FRONTEND=noninteractive

      # Install general utilties
      apt-get install -y net-tools traceroute arping jq dracut-core
      
      {{if .FIPS}}
      # Check if FIPS is disabled then enable it
      if [ "$(cat /proc/sys/crypto/fips_enabled)" = "0" ]; then
        enable_fips
      fi
      {{end}}

      # https://kind.sigs.k8s.io/docs/user/known-issues/#pod-errors-due-to-too-many-open-files
      sysctl fs.inotify.max_user_watches=524288
      sysctl fs.inotify.max_user_instances=512

      # Force this IP on the lima0 interface
      ip a add {{or .VMIPv4 "192.168.105.23"}}/24 dev lima0 || true

      # Install Docker on the VM
      curl -fsSL https://get.docker.com | sh
      groupadd docker || true
      usermod -aG docker {{.user}}

      # Enable cross architecture images
      nerdctl run --privileged --rm tonistiigi/binfmt --install all
probes:
  - script: |
      #!/bin/bash
      set -eux -o pipefail
      if ! timeout 30s bash -c "until command -v docker >/dev/null 2>&1; do sleep 2; done"; then
        echo >&2 "Docker is not installed yet"
        exit 1
      fi
    hint: See "/var/log/cloud-init-output.log". in the guest
portForwards:
  - guestSocket: "/run/docker.sock"
    hostSocket: "{{"{{.Home}}"}}/.kindli/{{.vmName}}.sock"
hostResolver:
  hosts:
    host.docker.internal: host.lima.internal
networks:
  - lima: shared
useHostResolver: false
dns:
  - 1.1.1.1
  - 1.0.0.1